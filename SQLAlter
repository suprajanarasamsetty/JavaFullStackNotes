The `ALTER TABLE` statement in SQL is used to modify an existing table structure. You can use it to add, delete, or modify columns in a table, or to add or drop various constraints on the table.

Here are some common usages of the `ALTER TABLE` statement:

### 1. Add a New Column

To add a new column to an existing table, use the `ADD` clause.

```sql
ALTER TABLE table_name
ADD column_name data_type;
```

**Example:**

```sql
ALTER TABLE employees
ADD birthdate DATE;
```

This adds a new column named `birthdate` of type `DATE` to the `employees` table.

### 2. Drop a Column

To remove a column from an existing table, use the `DROP COLUMN` clause.

```sql
ALTER TABLE table_name
DROP COLUMN column_name;
```

**Example:**

```sql
ALTER TABLE employees
DROP COLUMN birthdate;
```

This removes the `birthdate` column from the `employees` table.

### 3. Modify an Existing Column

To change the data type of an existing column, use the `ALTER COLUMN` clause (the exact syntax might vary slightly between SQL databases).

```sql
ALTER TABLE table_name
ALTER COLUMN column_name SET DATA TYPE new_data_type;
```

**Example:**

```sql
ALTER TABLE employees
ALTER COLUMN birthdate TYPE VARCHAR(10);
```

This changes the data type of the `birthdate` column in the `employees` table to `VARCHAR(10)`.

### 4. Rename a Column

To rename a column, use the `RENAME COLUMN` clause (this syntax is for PostgreSQL; it might vary in other databases).

```sql
ALTER TABLE table_name
RENAME COLUMN old_column_name TO new_column_name;
```

**Example:**

```sql
ALTER TABLE employees
RENAME COLUMN birthdate TO birth_date;
```

This renames the `birthdate` column to `birth_date` in the `employees` table.

### 5. Add a Constraint

To add a new constraint to a table, use the `ADD CONSTRAINT` clause.

```sql
ALTER TABLE table_name
ADD CONSTRAINT constraint_name constraint_definition;
```

**Example:**

```sql
ALTER TABLE employees
ADD CONSTRAINT chk_salary CHECK (salary > 0);
```

This adds a check constraint named `chk_salary` to ensure that the `salary` column in the `employees` table has positive values.

### 6. Drop a Constraint

To remove a constraint, use the `DROP CONSTRAINT` clause.

```sql
ALTER TABLE table_name
DROP CONSTRAINT constraint_name;
```

**Example:**

```sql
ALTER TABLE employees
DROP CONSTRAINT chk_salary;
```

This removes the `chk_salary` check constraint from the `employees` table.

### Summary

The `ALTER TABLE` statement is versatile and powerful for making changes to an existing table structure. Here are some key points to remember:
- Use `ADD` to add new columns or constraints.
- Use `DROP COLUMN` to remove columns.
- Use `ALTER COLUMN` to change the data type of a column.
- Use `RENAME COLUMN` to rename a column.
- Use `ADD CONSTRAINT` to add new constraints.
- Use `DROP CONSTRAINT` to remove constraints. 

These operations allow you to dynamically adjust the structure of your database tables to meet changing requirements.
